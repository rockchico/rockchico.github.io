{"pageProps":{"post":{"mdxSource":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"introduction\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#introduction\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Introduction\"), mdx(\"p\", null, \"Markdown and Mdx parsing is supported via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"unified\"), \", and other remark and rehype packages. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"next-mdx-remote\"), \" allows us to parse \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".mdx\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".md\"), \" files in a more flexible manner without touching webpack.\"), mdx(\"p\", null, \"Github flavored markdown is used. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mdx-prism\"), \" provides syntax highlighting capabilities for code blocks. Here's a demo of how everything looks.\"), mdx(\"p\", null, \"The following markdown cheatsheet is adapted from: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://guides.github.com/features/mastering-markdown/\"\n  }, \"https://guides.github.com/features/mastering-markdown/\")), mdx(\"h1\", {\n    \"id\": \"what-is-markdown\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#what-is-markdown\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"What is Markdown?\"), mdx(\"p\", null, \"Markdown is a way to style text on the web. You control the display of the document; formatting words as bold or italic, adding images, and creating lists are just a few of the things we can do with Markdown. Mostly, Markdown is just regular text with a few non-alphabetic characters thrown in, like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"*\"), \".\"), mdx(\"h1\", {\n    \"id\": \"syntax-guide\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#syntax-guide\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Syntax guide\"), mdx(\"p\", null, \"Here\\u2019s an overview of Markdown syntax that you can use anywhere on GitHub.com or in your own text files.\"), mdx(\"h2\", {\n    \"id\": \"headers\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#headers\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Headers\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# This is a h1 tag\\n\\n## This is a h2 tag\\n\\n#### This is a h4 tag\\n\")), mdx(\"h1\", {\n    \"id\": \"this-is-a-h1-tag\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#this-is-a-h1-tag\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"This is a h1 tag\"), mdx(\"h2\", {\n    \"id\": \"this-is-a-h2-tag\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#this-is-a-h2-tag\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"This is a h2 tag\"), mdx(\"h4\", {\n    \"id\": \"this-is-a-h4-tag\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#this-is-a-h4-tag\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"This is a h4 tag\"), mdx(\"h2\", {\n    \"id\": \"emphasis\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#emphasis\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Emphasis\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"_This text will be italic_\\n\\n**This text will be bold**\\n\\n_You **can** combine them_\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"This text will be italic\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This text will be bold\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"You \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"can\"), \" combine them\")), mdx(\"h2\", {\n    \"id\": \"lists\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#lists\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Lists\"), mdx(\"h3\", {\n    \"id\": \"unordered\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#unordered\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Unordered\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"- Item 1\\n- Item 2\\n  - Item 2a\\n  - Item 2b\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Item 1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Item 2\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Item 2a\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Item 2b\")))), mdx(\"h3\", {\n    \"id\": \"ordered\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#ordered\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Ordered\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"1. Item 1\\n1. Item 2\\n1. Item 3\\n   1. Item 3a\\n   1. Item 3b\\n\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Item 1\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Item 2\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Item 3\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Item 3a\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Item 3b\")))), mdx(\"h2\", {\n    \"id\": \"images\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#images\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Images\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"![GitHub Logo](https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png)\\nFormat: ![Alt Text](url)\\n\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\",\n    \"alt\": \"GitHub Logo\"\n  })), mdx(\"h2\", {\n    \"id\": \"links\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#links\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Links\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"http://github.com - automatic!\\n[GitHub](http://github.com)\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://github.com\"\n  }, \"http://github.com\"), \" - automatic!\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://github.com\"\n  }, \"GitHub\")), mdx(\"h2\", {\n    \"id\": \"blockquotes\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#blockquotes\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Blockquotes\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"As Kanye West said:\\n\\n> We're living the future so\\n> the present is our past.\\n\")), mdx(\"p\", null, \"As Kanye West said:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We're living the future so\\nthe present is our past.\")), mdx(\"h2\", {\n    \"id\": \"inline-code\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#inline-code\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Inline code\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"I think you should use an\\n`<addr>` element here instead.\\n\")), mdx(\"p\", null, \"I think you should use an\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<addr>\"), \" element here instead.\"), mdx(\"h2\", {\n    \"id\": \"syntax-highlighting\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#syntax-highlighting\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Syntax highlighting\"), mdx(\"p\", null, \"Here\\u2019s an example of how you can use syntax highlighting with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://help.github.com/articles/basic-writing-and-formatting-syntax/\"\n  }, \"GitHub Flavored Markdown\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"```js:fancyAlert.js\\nfunction fancyAlert(arg) {\\n  if (arg) {\\n    $.facebox({ div: '#foo' })\\n  }\\n}\\n\")), mdx(\"p\", null, \"And here's how it looks - nicely colored with styled code titles!\"), mdx(\"div\", {\n    \"className\": \"remark-code-title\"\n  }, \"fancyAlert.js\"), mdx(\"pre\", {\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-blue\"\n  }, \"fancyAlert\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"arg\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"{\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), \"arg\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"{\"), \"\\n    $\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"facebox\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"{\"), \" div\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-green\"\n  }, \"'#foo'\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"}\"), \"\\n\")), mdx(\"h2\", {\n    \"id\": \"task-lists\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#task-lists\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Task Lists\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"- [x] list syntax required (any unordered or ordered list supported)\\n- [x] this is a complete item\\n- [ ] this is an incomplete item\\n\")), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"list syntax required (any unordered or ordered list supported)\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  }), \" \", \"this is a complete item\"), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"this is an incomplete item\")), mdx(\"h2\", {\n    \"id\": \"tables\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#tables\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Tables\"), mdx(\"p\", null, \"You can create tables by assembling a list of words and dividing them with hyphens \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-\"), \" (for the first row), and then separating each column with a pipe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"|\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"| First Header                | Second Header                |\\n| --------------------------- | ---------------------------- |\\n| Content from cell 1         | Content from cell 2          |\\n| Content in the first column | Content in the second column |\\n\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"First Header\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Second Header\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Content from cell 1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Content from cell 2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Content in the first column\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Content in the second column\")))), mdx(\"h2\", {\n    \"id\": \"strikethrough\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#strikethrough\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Strikethrough\"), mdx(\"p\", null, \"Any word wrapped with two tildes (like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~~this~~\"), \") will appear \", mdx(\"del\", {\n    parentName: \"p\"\n  }, \"crossed out\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Introduction</h1><p>Markdown and Mdx parsing is supported via <code>unified</code>, and other remark and rehype packages. <code>next-mdx-remote</code> allows us to parse <code>.mdx</code> and <code>.md</code> files in a more flexible manner without touching webpack.</p><p>Github flavored markdown is used. <code>mdx-prism</code> provides syntax highlighting capabilities for code blocks. Here&#x27;s a demo of how everything looks.</p><p>The following markdown cheatsheet is adapted from: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://guides.github.com/features/mastering-markdown/\">https://guides.github.com/features/mastering-markdown/</a></p><h1 id=\"what-is-markdown\"><a href=\"#what-is-markdown\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>What is Markdown?</h1><p>Markdown is a way to style text on the web. You control the display of the document; formatting words as bold or italic, adding images, and creating lists are just a few of the things we can do with Markdown. Mostly, Markdown is just regular text with a few non-alphabetic characters thrown in, like <code>#</code> or <code>*</code>.</p><h1 id=\"syntax-guide\"><a href=\"#syntax-guide\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Syntax guide</h1><p>Here’s an overview of Markdown syntax that you can use anywhere on GitHub.com or in your own text files.</p><h2 id=\"headers\"><a href=\"#headers\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Headers</h2><pre><code># This is a h1 tag\n\n## This is a h2 tag\n\n#### This is a h4 tag\n</code></pre><h1 id=\"this-is-a-h1-tag\"><a href=\"#this-is-a-h1-tag\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>This is a h1 tag</h1><h2 id=\"this-is-a-h2-tag\"><a href=\"#this-is-a-h2-tag\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>This is a h2 tag</h2><h4 id=\"this-is-a-h4-tag\"><a href=\"#this-is-a-h4-tag\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>This is a h4 tag</h4><h2 id=\"emphasis\"><a href=\"#emphasis\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Emphasis</h2><pre><code>_This text will be italic_\n\n**This text will be bold**\n\n_You **can** combine them_\n</code></pre><p><em>This text will be italic</em></p><p><strong>This text will be bold</strong></p><p><em>You <strong>can</strong> combine them</em></p><h2 id=\"lists\"><a href=\"#lists\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Lists</h2><h3 id=\"unordered\"><a href=\"#unordered\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Unordered</h3><pre><code>- Item 1\n- Item 2\n  - Item 2a\n  - Item 2b\n</code></pre><ul><li>Item 1</li><li>Item 2<ul><li>Item 2a</li><li>Item 2b</li></ul></li></ul><h3 id=\"ordered\"><a href=\"#ordered\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Ordered</h3><pre><code>1. Item 1\n1. Item 2\n1. Item 3\n   1. Item 3a\n   1. Item 3b\n</code></pre><ol><li>Item 1</li><li>Item 2</li><li>Item 3<ol><li>Item 3a</li><li>Item 3b</li></ol></li></ol><h2 id=\"images\"><a href=\"#images\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Images</h2><pre><code>![GitHub Logo](https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png)\nFormat: ![Alt Text](url)\n</code></pre><p><img src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\" alt=\"GitHub Logo\"/></p><h2 id=\"links\"><a href=\"#links\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Links</h2><pre><code>http://github.com - automatic!\n[GitHub](http://github.com)\n</code></pre><p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://github.com\">http://github.com</a> - automatic!\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://github.com\">GitHub</a></p><h2 id=\"blockquotes\"><a href=\"#blockquotes\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Blockquotes</h2><pre><code>As Kanye West said:\n\n&gt; We&#x27;re living the future so\n&gt; the present is our past.\n</code></pre><p>As Kanye West said:</p><blockquote><p>We&#x27;re living the future so\nthe present is our past.</p></blockquote><h2 id=\"inline-code\"><a href=\"#inline-code\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Inline code</h2><pre><code>I think you should use an\n`&lt;addr&gt;` element here instead.\n</code></pre><p>I think you should use an\n<code>&lt;addr&gt;</code> element here instead.</p><h2 id=\"syntax-highlighting\"><a href=\"#syntax-highlighting\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Syntax highlighting</h2><p>Here’s an example of how you can use syntax highlighting with <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://help.github.com/articles/basic-writing-and-formatting-syntax/\">GitHub Flavored Markdown</a>:</p><pre><code>```js:fancyAlert.js\nfunction fancyAlert(arg) {\n  if (arg) {\n    $.facebox({ div: &#x27;#foo&#x27; })\n  }\n}\n</code></pre><p>And here&#x27;s how it looks - nicely colored with styled code titles!</p><div class=\"remark-code-title\">fancyAlert.js</div><pre class=\"language-js\"><code class=\"language-js\"><span class=\"text-code-purple\">function</span> <span class=\"text-code-blue\">fancyAlert</span><span class=\"text-code-white\">(</span><span class=\"\">arg</span><span class=\"text-code-white\">)</span> <span class=\"text-code-white\">{</span>\n  <span class=\"text-code-purple\">if</span> <span class=\"text-code-white\">(</span>arg<span class=\"text-code-white\">)</span> <span class=\"text-code-white\">{</span>\n    $<span class=\"text-code-white\">.</span><span class=\"\">facebox</span><span class=\"text-code-white\">(</span><span class=\"text-code-white\">{</span> div<span class=\"\">:</span> <span class=\"text-code-green\">&#x27;#foo&#x27;</span> <span class=\"text-code-white\">}</span><span class=\"text-code-white\">)</span>\n  <span class=\"text-code-white\">}</span>\n<span class=\"text-code-white\">}</span>\n</code></pre><h2 id=\"task-lists\"><a href=\"#task-lists\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Task Lists</h2><pre><code>- [x] list syntax required (any unordered or ordered list supported)\n- [x] this is a complete item\n- [ ] this is an incomplete item\n</code></pre><ul class=\"contains-task-list\"><li class=\"task-list-item\"><input type=\"checkbox\" checked=\"\" disabled=\"\"/> <!-- -->list syntax required (any unordered or ordered list supported)</li><li class=\"task-list-item\"><input type=\"checkbox\" checked=\"\" disabled=\"\"/> <!-- -->this is a complete item</li><li class=\"task-list-item\"><input type=\"checkbox\" disabled=\"\"/> <!-- -->this is an incomplete item</li></ul><h2 id=\"tables\"><a href=\"#tables\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Tables</h2><p>You can create tables by assembling a list of words and dividing them with hyphens <code>-</code> (for the first row), and then separating each column with a pipe <code>|</code>:</p><pre><code>| First Header                | Second Header                |\n| --------------------------- | ---------------------------- |\n| Content from cell 1         | Content from cell 2          |\n| Content in the first column | Content in the second column |\n</code></pre><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content from cell 1</td><td>Content from cell 2</td></tr><tr><td>Content in the first column</td><td>Content in the second column</td></tr></tbody></table><h2 id=\"strikethrough\"><a href=\"#strikethrough\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Strikethrough</h2><p>Any word wrapped with two tildes (like <code>~~this~~</code>) will appear <del>crossed out</del>.</p>","scope":{}},"frontMatter":{"wordCount":600,"readingTime":{"text":"3 min read","minutes":2.99,"time":179400,"words":598},"slug":"github-markdown-guide","fileName":"github-markdown-guide.mdx","title":"Markdown Guide","date":"2019-10-11","tags":["github","guide"],"draft":false,"summary":"Markdown cheatsheet for all your blogging needs - headers, lists, images, tables and more! An illustrated guide based on Github Flavored Markdown."}},"prev":{"title":"The Time Machine","date":"2018-08-15","tags":["writings","book","reflection"],"draft":false,"summary":"The Time Traveller (for so it will be convenient to speak of him) was expounding a recondite matter to us. His pale grey eyes shone and twinkled, and his usually pale face was flushed and animated...","slug":"the-time-machine"},"next":{"title":"Deriving the OLS Estimator","date":"2019-11-16","tags":["next js","math","ols"],"draft":false,"summary":"How to derive the OLS Estimator with matrix notation and a tour of math typesetting using markdown with the help of KaTeX.","slug":"deriving-ols-estimator"}},"__N_SSG":true}